private static void ExportObjects(IApp app, string dumpPath, IEnumerable<string> visualisationsList, IReadOnlyCollection<string> excludedTags)
{
    var objectOptions = new NxGetObjectOptions
    {
        IncludeSessionObjects = true,
        Types = visualisationsList
    };
    var elements = app.GetObjects(objectOptions);

    // Prepare to write dimensions to a TXT file
    string txtFilePath = Path.Combine(dumpPath, "Dimensions.txt");
    using (StreamWriter writer = new StreamWriter(txtFilePath))
    {
        writer.WriteLine("Title\tDefinition\tCalculation Condition\tFont Color\tBackground Color");
        writer.WriteLine("--------------------------------------------------------------------------------");

        foreach (var element in elements.ToList())
        {
            var elementId = element.Info.Id;
            var elementType = element.Info.Type ?? "unknownElementType";

            if (elementType.Equals("table", StringComparison.OrdinalIgnoreCase))
            {
                var elementLayout = app.GetObject<GenericObject>(elementId).GetLayout();
                var elementLayoutXml = JsonConvert.DeserializeXmlNode(elementLayout.ToString(), "document");

                // Assuming qHypercubeDef structure
                var qHypercubeDefNodes = elementLayoutXml.SelectNodes("//qHypercubeDef");

                foreach (XmlNode qHypercubeDefNode in qHypercubeDefNodes)
                {
                    var qDimensions = qHypercubeDefNode.SelectNodes("qDimensions");

                    foreach (XmlNode dimension in qDimensions)
                    {
                        var title = dimension.SelectSingleNode("qDef/qFieldDefs")?.InnerText ?? "N/A";
                        var calcCondition = dimension.SelectSingleNode("qCalcCondition/qv")?.InnerText ?? "N/A";
                        var fontColor = "N/A"; // Set based on your context
                        var backgroundColor = "N/A"; // Set based on your context

                        writer.WriteLine($"{title}\t{dimension.SelectSingleNode("qDef")?.InnerText}\t{calcCondition}\t{fontColor}\t{backgroundColor}");
                    }
                }
            }
        }
    }
}
