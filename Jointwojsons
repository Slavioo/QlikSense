# Define the paths to the JSON files
$jsonFilePath1 = 'path\to\first.json'
$jsonFilePath2 = 'path\to\second.json'
$outputFilePath = 'path\to\merged.json'

# Read the JSON files and convert them to PowerShell objects
$json1 = Get-Content $jsonFilePath1 | ConvertFrom-Json
$json2 = Get-Content $jsonFilePath2 | ConvertFrom-Json

# Merge function
function Merge-JsonObjects {
    param (
        [PSCustomObject]$PrimaryObject,
        [PSCustomObject]$SecondaryObject
    )
    foreach ($prop in $SecondaryObject.PSObject.Properties) {
        if ($null -ne $PrimaryObject.$($prop.Name)) {
            $PrimaryObject | Add-Member -NotePropertyName $prop.Name -NotePropertyValue $prop.Value -Force
        }
    }
    return $PrimaryObject
}

# Loop through each object in the first JSON
for ($i=0; $i -lt $json1.Count; $i++) {
    # Find a matching object in the second JSON
    $matchingObject = $json2 | Where-Object {
        $match = $true
        foreach ($prop in $_.PSObject.Properties) {
            if ($json1[$i].$($prop.Name) -ne $prop.Value) {
                $match = $false
                break
            }
        }
        return $match
    }

    # If a matching object is found, merge it with the current object from the first JSON
    if ($matchingObject) {
        $json1[$i] = Merge-JsonObjects -PrimaryObject $json1[$i] -SecondaryObject $matchingObject
    }
}

# Save the merged content to a new JSON file
$json1 | ConvertTo-Json -Depth 10 | Set-Content $outputFilePath

# Output a message indicating successful completion
Write-Host "Merged JSON data saved to $outputFilePath"
