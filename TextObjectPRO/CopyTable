<!-- Your table structure -->
<table class="table-preview">
    <thead>
        <tr>
            <th>
                Header
                <div class="download-icon" style="float: right; cursor: pointer;">ðŸ“¥</div>
            </th>
        </tr>
    </thead>
    <tbody>
        <!-- Table rows -->
    </tbody>
</table>


// Event delegation for dynamically created elements
$element.on('click', '.copyable', function() {
    const text = $(this).text().trim();
    copyToClipboard(text);
});

$element.on('click', '.download-icon', function() {
    copyTableToClipboard($(this).closest('.table-preview'));
});

// Tooltip on hover
$element.on('mouseenter', '.copyable', function() {
    $(this).attr('title', 'Click to copy');
});

$element.on('mouseleave', '.copyable', function() {
    $(this).removeAttr('title');
});

$element.on('mouseenter', '.download-icon', function() {
    $(this).attr('title', 'Click to copy the entire table');
});

$element.on('mouseleave', '.download-icon', function() {
    $(this).removeAttr('title');
});



headers.forEach((header, index) => {
    const th = $('<th></th>').text(header);
    if (index === headers.length - 1) {
        const downloadEmoji = $('<span></span>').text('ðŸ“¥').addClass('download-icon');
        th.append(downloadEmoji);
    }
    headerRow.append(th);
});

table.append(headerRow);

function copyTableToClipboard($table) {
    const el = document.createElement('textarea');
    const tableHtml = $table[0].outerHTML;
    el.value = tableHtml;
    el.setAttribute('readonly', '');
    el.style.position = 'absolute';
    el.style.left = '-9999px';
    document.body.appendChild(el);
    el.select();
    document.execCommand('copy');
    document.body.removeChild(el);
}

// Usage example
const $table = $('table');
copyTableToClipboard($table);
