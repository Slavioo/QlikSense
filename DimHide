define(["qlik", "jquery", "text!./style.css", "text!./template.html"], function (qlik, $, cssContent, template) {
    'use strict';
    $("<style>").html(cssContent).appendTo("head");
    return {
        template: template,
        initialProperties: {
            qHyperCubeDef: {
                qDimensions: [],
                qMeasures: [],
                qInitialDataFetch: [{
                    qWidth: 10,
                    qHeight: 50
                }]
            }
        },
        definition: {
            type: "items",
            component: "accordion",
            items: {
                hideDimensions: {
                    ref: "customProperties.hideDimensions",
                    label: "Hide Dimensions from Left",
                    type: "integer",
                    component: "dropdown",
                    defaultValue: 0,
                    options: (function() {
                        var options = [];
                        for (var i = 0; i <= 10; i++) {
                            options.push({ value: i, label: i.toString() });
                        }
                        return options;
                    })()
                },
                dimensions: {
                    uses: "dimensions",
                    min: 1
                },
                measures: {
                    uses: "measures",
                    min: 0
                },
                sorting: {
                    uses: "sorting"
                },
                settings: {
                    uses: "settings",
                    items: {
                        initFetchRows: {
                            ref: "qHyperCubeDef.qInitialDataFetch.0.qHeight",
                            label: "Initial fetch rows",
                            type: "number",
                            defaultValue: 50
                        }
                    }
                }
            }
        },
        support: {
            snapshot: true,
            export: true,
            exportData: true
        },
        paint: function () {
            //setup scope.table
            if (!this.$scope.table) {
                this.$scope.table = qlik.table(this);
            }
            return qlik.Promise.resolve();
        },
        controller: ['$scope', function (/*$scope*/) {
        }]
    };
});

<tr>
    <th ng-repeat="head in table.headers track by $index" ng-if="$index >= customProperties.hideDimensions" qva-activate="head.orderBy()">{{head.qFallbackTitle}}</th>
</tr>


<tr ng-repeat="row in table.rows track by $index">
    <td ng-repeat="cell in row.cells track by $index" ng-if="$index >= customProperties.hideDimensions" class="selectable" ng-class="{'selected':cell.selected,'numeric':cell.qNum}" qva-activate="cell.select($event)">{{cell.qText}}</td>
</tr>


