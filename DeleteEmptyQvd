# Set the path to the folder containing the qvd files
$qvdFolder = "C:\Qlik\Data"

# Get all qvd files in the folder
$qvdFiles = Get-ChildItem -Path $qvdFolder -Filter "*.qvd"

# Define the size of the QvdTableHeader in bytes
$qvdTableHeaderSize = 28

# Loop through the qvd files and get the NoOfRecords property
foreach ($qvdFile in $qvdFiles) {
    # Open the qvd file as a memory-mapped view
    $qvdView = [System.IO.MemoryMappedFiles.MemoryMappedFile]::CreateFromFile($qvdFile.FullName)
    $qvdAccessor = $qvdView.CreateViewAccessor(0, $qvdTableHeaderSize)

    # Read the QvdTableHeader as a string
    $qvdTableHeader = ""
    for ($i = 0; $i -lt $qvdTableHeaderSize; $i++) {
        $qvdTableHeader += [char]$qvdAccessor.ReadByte($i)
    }

    # Get the NoOfRecords property from the QvdTableHeader
    $noOfRecords = [System.BitConverter]::ToUInt32([System.Text.Encoding]::ASCII.GetBytes($qvdTableHeader.Substring(20, 8)), 0)

    # Close the memory-mapped view and accessor
    $qvdAccessor.Dispose()
    $qvdView.Dispose()

    # Write the NoOfRecords property to the console if it's not zero
    if ($noOfRecords -ne 0) {
        Write-Host "The qvd file $($qvdFile.FullName) has $noOfRecords records."
    }
}
