[xml]$xmlData = Get-Content -Path "input.xml"  # Replace with your XML file path
$outputFilePath = "output.csv"

$recordIds = @{}
$idCounter = 1

function GetOrCreateId($property) {
    if (-not $recordIds.ContainsKey($property)) {
        $recordIds[$property] = $idCounter++
    }
    return $recordIds[$property]
}

$csvData = @()

$xmlData.SelectNodes('//text()[normalize-space()]') | ForEach-Object {
    $element = $_.ParentNode
    $property = $element.Name
    
    # Create an array to capture the property hierarchy
    $propertyHierarchy = @($property)
    
    # Traverse up the XML hierarchy to include parent property names
    $parent = $element.ParentNode
    while ($parent -ne $null) {
        $propertyHierarchy += $parent.Name
        $parent = $parent.ParentNode
    }
    
    # Reverse the property hierarchy array to build the full property name
    $property = $propertyHierarchy[-1..-($propertyHierarchy.Count)]
    
    $property = $property -join '.'
    $value = $_.InnerText.Trim()
    $id = GetOrCreateId($property)
    
    # Create a custom PowerShell property name
    $propertyForPS = $property.Replace('.', '_')
    
    $csvData += [PSCustomObject]@{
        $propertyForPS = $value
        ID = $id
    }
}

$csvData | Export-Csv -Path $outputFilePath -NoTypeInformation -Delimiter ',' -Encoding UTF8
Write-Host "XML to CSV conversion complete."
