# Load the XML file
$xmlContent = [xml](Get-Content -Path "your_complex.xml")

# Initialize an empty array to store flattened data
$flatData = @()

# Loop through each element in the XML
foreach ($element in $xmlContent.SelectNodes("//*")) {
    $property = $element.Name
    $value = $element.InnerText

    # Determine the path by traversing parent elements
    $parents = $element | ForEach-Object {
        $node = $_
        $path = @()

        while ($node.ParentNode -ne $null) {
            $path += $node.ParentNode.Name
            $node = $node.ParentNode
        }

        $path = [array]::Reverse($path)
        $path -join '.'
    }

    # Create a custom object with Property, Path, and Value columns
    $entry = New-Object -TypeName PSObject
    $entry | Add-Member -MemberType NoteProperty -Name "Property" -Value $property
    $entry | Add-Member -MemberType NoteProperty -Name "Path" -Value $parents
    $entry | Add-Member -MemberType NoteProperty -Name "Value" -Value $value

    # Add the custom object to the flattened data array
    $flatData += $entry
}

# Export the flattened data as a CSV file (or any desired format)
$flatData | Export-Csv -Path "flattened_data_with_correct_path.csv" -NoTypeInformation
