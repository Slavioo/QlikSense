# Load the XML file
$xmlContent = [xml](Get-Content -Path "your_complex.xml")

# Initialize an empty array to store flattened data
$flatData = @()

# Recursive function to get all parent elements separated by full stops
function Get-AllParents($node) {
    $parents = @()

    while ($node.ParentNode -ne $null) {
        $parents = $node.ParentNode.Name + '.' + $parents
        $node = $node.ParentNode
    }

    return $parents
}

# Loop through each element in the XML
foreach ($element in $xmlContent.SelectNodes("//*")) {
    $property = $element.Name
    $value = $element.InnerText
    $parents = (Get-AllParents $element).TrimEnd('.')

    # Add the property, parents, and value to the flattened data
    $flatData += [PSCustomObject]@{ Parents = $parents; Property = $property; Value = $value }
    
    # Check if the tag has no child elements, and add it with an empty value
    if (-not $element.HasChildNodes) {
        $flatData += [PSCustomObject]@{ Parents = $parents; Property = $property; Value = "" }
    }
}

# Export the flattened data as a CSV file (or any desired format)
$flatData | Export-Csv -Path "flattened_with_parents_and_empty.csv" -NoTypeInformation
